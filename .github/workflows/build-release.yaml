name: collect-aws-metadata build + test
on: [push]  # all push to any branch
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running in response to ${{ github.event_name }}"

      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # all branches and tags; needed for version string

      - name: "Setup Go"
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      
      - name: "Test"
        run: make test-100pct

      - name: "Build and set $describe_version"
        run: |
          make tarball
          echo "describe_version=$(tools/describe-version)" | tee -a $GITHUB_ENV

      - name: "Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: collect-aws-metadata-${{ env.describe_version }}.tar.gz
          path: ./collect-aws-metadata-${{ env.describe_version }}.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: "Check release conditions"
        id: release_conditions
        run: |
          if [[ "$describe_version" =~ ^v[0-9]+(\.[0-9]+)*$ ]]; then
            echo "::notice::This is a release (${{ env.describe_version }})"
            echo "::set-output name=release::true"
          else
            echo "::notice::This is not a release (${{ env.describe_version }})"
            echo "::notice::To publish a release, push a new version tag, e.g.:   git tag -a -m v1.2.3 v1.2.3;  git push --tags"
            echo "::set-output name=release::false"
            false
          fi

      - name: "create release"
        if: steps.release_conditions.outputs.release == 'true'
        run: echo "releasing woohoo"